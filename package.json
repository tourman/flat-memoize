{
  "name": "flat-memoize",
  "version": "1.0.2",
  "description": "Memoizes functions with named arguments",
  "main": "dist/index.js",
  "scripts": {
    "test": "jest",
    "comb": "pict src/index.pict /e:src/index.pict.rows | tee /tmp/pict.rows | nl -v -1 | column -t | sed -r 's/-1/#/g' && mv /tmp/pict.rows src/index.pict.rows `# see https://github.com/microsoft/pict`",
    "build": "rm -rf dist && npm run eslint . && prettier -c . && jest && mkdir -p dist && cp -v src/index.js dist/ && cp -v src/Chain.js dist/ && cp -v src/Fork.js dist/ && cp -v README.md dist/ && node scripts/prepare.js",
    "deploy": "node scripts/validate.js && cd dist && npm publish",
    "eslint": "eslint --ignore-path=.gitignore",
    "efix": "npm run eslint -- --fix .",
    "prettier": "prettier --write ."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tourman/flat-memoize.git"
  },
  "keywords": [
    "memoize",
    "memoization"
  ],
  "author": "tourman",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tourman/flat-memoize/issues"
  },
  "homepage": "https://github.com/tourman/flat-memoize#readme",
  "eslintConfig": {
    "parserOptions": {
      "ecmaVersion": 2020
    },
    "root": true,
    "extends": [
      "airbnb-base",
      "prettier"
    ],
    "env": {
      "es2020": true,
      "jest/globals": true
    },
    "plugins": [
      "jest"
    ],
    "rules": {
      "prefer-arrow-callback": 1,
      "max-len": 1,
      "no-plusplus": 0,
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "**/*.test.js"
          ]
        }
      ],
      "no-param-reassign": [
        "error",
        {
          "props": true,
          "ignorePropertyModificationsFor": [
            "draft"
          ]
        }
      ],
      "no-restricted-syntax": [
        "error",
        {
          "selector": "ForInStatement",
          "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
        },
        {
          "selector": "LabeledStatement",
          "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
        },
        {
          "selector": "WithStatement",
          "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
        }
      ]
    }
  },
  "prettier": {
    "trailingComma": "all",
    "tabWidth": 2,
    "semi": false,
    "quoteProps": "consistent",
    "singleQuote": true
  },
  "devDependencies": {
    "@types/jest": "^29.5.6",
    "eslint": "^8.52.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.4.3",
    "eslint-plugin-prettier": "^5.0.1",
    "invariant": "^2.2.4",
    "jest": "^29.7.0",
    "prettier": "^3.0.3"
  }
}
